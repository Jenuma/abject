!function(){"use strict";function a(a,b,c){var d=this;d.getContacts=function(){d.isLoading=!0,c.getContacts().then(function(a){d.contacts=a,d.isLoading=!1})},d.addContact=function(){c.addContact(d.formData).then(function(b){"contacts-new"===a.current.name?a.go("contacts"):(d.contacts.push(b),d.formData=void 0)})},d.editContact=function(){c.editContact(d.formData).then(function(b){if("contacts-edit"===a.current.name)a.go("contacts");else for(var c=0;c<d.contacts.length;c++)if(d.contacts[c].id===b.id){d.contacts[c]=b;break}}),d.stopEditing()},d.updateContact=d.addContact,d.deleteContact=function(a){c.deleteContact(a).then(function(a){for(var b=0;b<d.contacts.length;b++)if(d.contacts[b].id===a.id){d.contacts.splice(b,1);break}})},d.startAdding=function(){window.matchMedia("(max-device-width: 480px)").matches&&a.go("contacts-new")},d.startEditing=function(b){window.matchMedia("(max-device-width: 480px)").matches?a.go("contacts-edit",{id:b.id}):(d.isEditing=!0,d.updateIcon="fa fa-check fa-fw",d.formData=JSON.parse(JSON.stringify(b)),d.updateContact=d.editContact)},d.stopEditing=function(){d.isEditing=!1,d.updateIcon="fa fa-user-plus fa-fw",d.formData=void 0,d.updateContact=d.addContact},"contacts-edit"===a.current.name?c.getContact(b.id).then(function(a){d.updateMode="Edit",d.formData=a,d.updateIcon="fa fa-check fa-fw",d.updateContact=d.editContact}):"contacts-new"===a.current.name?d.updateMode="Add":d.getContacts()}angular.module("wgl.controllers.contact",[]).controller("ContactController",a),a.$inject=["$state","$stateParams","contactService"]}(),function(){"use strict";function a(a,b){this.getContacts=function(){return a.get("/api/contacts").then(function(a){return a.data},function(a){return b.updateErrorMessage(a.data),!1})},this.getContact=function(c){return a.get("/api/contacts/"+c).then(function(a){return a.data},function(a){return b.updateErrorMessage(a.data),!1})},this.addContact=function(c){return a.post("/api/contacts",c).then(function(a){return a.data},function(a){return b.updateErrorMessage(a.data),!1})},this.editContact=function(c){return a.put("/api/contacts/"+c.id,c).then(function(a){return a.data},function(a){return b.updateErrorMessage(a.data),!1})},this.deleteContact=function(c){return a.delete("/api/contacts/"+c).then(function(a){return a.data},function(a){return b.updateErrorMessage(a.data),!1})}}angular.module("wgl.services.contact",[]).service("contactService",a),a.$inject=["$http","errorService"]}(),function(){"use strict";function a(a){var b=this;b.loadKanbanView=function(){a.go("kanban")},b.loadContactView=function(){a.go("contacts")}}angular.module("wgl.controllers.dashboard",[]).controller("DashboardController",a),a.$inject=["$state"]}(),function(){"use strict";function a(a){var b=this;b.dismissError=function(){a.updateErrorMessage("")};var c=function(){b.errorMessage=a.errorMessage};a.registerObserverCallback(c)}angular.module("wgl.controllers.error",[]).controller("ErrorController",a),a.$inject=["errorService"]}(),function(){"use strict";function a(){return{restrict:"A",templateUrl:"/features/error/error.html",controller:"ErrorController",controllerAs:"errorCtrl"}}angular.module("wgl.directives.error",[]).directive("wglError",a)}(),function(){"use strict";function a(){var a=[];this.updateErrorMessage=function(a){this.errorMessage=a,b()},this.registerObserverCallback=function(b){a.push(b)};var b=function(){angular.forEach(a,function(a){a()})}}angular.module("wgl.services.error",[]).service("errorService",a)}(),function(){"use strict";function a(a){var b=this;b.setActiveTab=function(a){b.activeList=a},b.isTabActive=function(a){return b.activeList===a},b.activeList="my"}angular.module("wgl.controllers.kanban",[]).controller("KanbanController",a),a.$inject=["$state"]}(),function(){"use strict";function a(){function a(a,c,d){var e=new Spinner(b).spin();document.querySelector("#spinner-container").appendChild(e.el)}var b={color:"#FFFFFF",position:"absolute",shadow:!0};return{restrict:"A",link:a,templateUrl:"/features/loading-spinner/loading-spinner.html"}}angular.module("wgl.directives.loading-spinner",[]).directive("wglLoadingSpinner",a)}(),function(){"use strict";function a(a,b){var c=this;a.getCurrentUser().then(function(a){a?(c.username=a.username,c.profilePic=a.profilePic):b.updateErrorMessage(a.data)})}angular.module("wgl.controllers.nav",[]).controller("NavController",a),a.$inject=["sessionService","errorService"]}(),function(){"use strict";function a(a){this.getCurrentUser=function(){return a.get("/session/user").then(function(a){return{username:a.data.displayName,profilePic:a.data.photos[0].value}},function(a){return!1})}}angular.module("wgl.services.session",[]).service("sessionService",a),a.$inject=["$http"]}(),function(){"use strict";function a(a,b){function c(a,b){b.getCurrentUser().then(function(b){b&&a.go("dashboard")})}function d(a,b){b.getCurrentUser().then(function(b){b||a.go("login")})}c.$inject=["$state","sessionService"],d.$inject=["$state","sessionService"];var e={name:"login",url:"/login",templateUrl:"/features/login/login.html",resolve:{$title:function(){return"Login"},alreadyLoggedIn:c}},f={name:"dashboard",url:"/",templateUrl:"/features/dashboard/dashboard.html",controller:"DashboardController",controllerAs:"dashboardCtrl",resolve:{$title:function(){return"Dashboard"},notLoggedIn:d}},g={name:"kanban",url:"/kanban",templateUrl:"/features/kanban/kanban.index.html",controller:"KanbanController",controllerAs:"kanbanCtrl",resolve:{$title:function(){return"Kanban"},notLoggedIn:d},onEnter:function(){$(".container").css("min-width","100%")},onExit:function(){$(".container").css("min-width","")}},h={name:"contacts",url:"/contacts",templateUrl:"/features/contact/contact.index.html",controller:"ContactController",controllerAs:"contactCtrl",resolve:{$title:function(){return"Contacts"},notLoggedIn:d}},i={name:"contacts-new",url:"/contacts/new",templateUrl:"/features/contact/contact.update.html",controller:"ContactController",controllerAs:"contactCtrl",resolve:{$title:function(){return"New Contact"},notLoggedIn:d}},j={name:"contacts-edit",url:"/contacts/:id",templateUrl:"/features/contact/contact.update.html",controller:"ContactController",controllerAs:"contactCtrl",resolve:{$title:function(){return"Edit Contact"},notLoggedIn:d}},k={name:"unauthorized",url:"/401",templateUrl:"/features/error/401.html",resolve:{$title:function(){return"401 - Unauthorized"}}},l={name:"notFound",url:"*path",templateUrl:"/features/error/404.html",resolve:{$title:function(){return"404 - Not Found"}}};b.html5Mode(!0),a.state(e),a.state(f),a.state(g),a.state(h),a.state(i),a.state(j),a.state(k),a.state(l)}a.$inject=["$stateProvider","$locationProvider"],angular.module("app",["ngAnimate","ui.router","ui.router.title","wgl.directives.error","wgl.directives.loading-spinner","wgl.services.session","wgl.services.error","wgl.services.contact","wgl.controllers.error","wgl.controllers.nav","wgl.controllers.dashboard","wgl.controllers.kanban","wgl.controllers.contact"]).config(a)}();